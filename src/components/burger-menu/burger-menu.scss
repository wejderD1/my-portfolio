$items: 3;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

.burger-menu {
    display: block;
    position: relative;
    margin: 10px auto;
    width: 100%;
    overflow: hidden;
    display: none;
    transition: $transition-duration all linear;
}

#toggle{
    display: none;
}

#toggle:focus {
    & ~ .toggle-container .button-toggle {
        box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
    }
}

#toggle:checked {
    // Все что прописано будет после нажатия на чекбокс
    & ~ .toggle-container .button-toggle {
        box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);

        &:hover {
            box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1),
                0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
        }

        &:before {
            transform: translateY(-50%) rotate(45deg) scale(1);
        }

        &:after {
            transform: translateY(-50%) rotate(-45deg) scale(1);
        }
    }

    &:focus ~ .toggle-container .button-toggle {
        box-shadow: 0 0 0 550px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1), 0 0 0 8px rgba(0, 0, 0, 0.1),
            inset 0 0 0 20px rgba(0, 0, 0, 0.1);
    }

    // открытие контейнера с меню
    & ~ .burger-wrap {
        margin-bottom: 100px;
        pointer-events: auto;
        transform: translate(50px, 50px);
        height: 130px;

        // разскрытие меню с иконки в текст
        .nav-link {
            color: #fcfcfc;
            letter-spacing: 0;
            height: 40px;
            line-height: 40px;
            margin-top: 0;
            opacity: 1;
            transform: scaleY(1);
            transition: $transition-duration, opacity 0.1s;

            // Пункты меню открываются постепенно
            @for $i from 1 through $items {
                &:nth-child(#{$i}) {
                    $delay: ($items - $i) * $transition-delay;
                    transition-delay: $delay;
                    &:before {
                        transition-delay: $delay;
                    }
                }
            }

            // Убираю линии 
            &:before {
                opacity: 0;
            }
        }
    }
}

// формируем кнопку (т.е. крестик)
.button-toggle {
    position: absolute;
    top: 10px;
    // left: 20px;
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 15px;
    background-color: transparent;
    border: none;
    cursor: pointer;
    border-radius: 100%;
    transition: $transition-duration + 0.1;

    // тень при наведении не крестик
    &:hover {
        box-shadow: 0 0 0 8px rgba(85, 79, 79, 0.1), inset 0 0 0 20px rgba(78, 70, 70, 0.1);
    }

    // Making the "X" icon using `:before` and `:after` pseudo-elements
    // Initially hidden because `scale(0)` transformation
    // формирую крестик с помощью псевдоелементов before и after
    &:before,
    &:after {
        position: absolute;
        content: "";
        top: 50%;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: #ffffff;
        border-radius: 5px;
        transition: $transition-duration;
    }

    &:before {
        transform: translateY(-50%) rotate(45deg) scale(0);
    }

    &:after {
        transform: translateY(-50%) rotate(-45deg) scale(0);
    }
}



/* Menu при нормальном виде */
.burger-wrap {
    display: block;
    // margin: 25px 25px 20px;
    // Don't want pointer-events as menu is closed
    pointer-events: none;
    transition: $transition-duration;
}

// формирую бургер полоски с меню и текста
.burger-menu .nav-link {
    position: relative;
    display: inline-block;
    float: left;
    clear: both;
    color: transparent;
    font-size: 22px;
    letter-spacing: -6.2px;
    height: 7px;
    line-height: 7px;
    text-transform: uppercase;
    white-space: nowrap;
    transform: scaleY(0.2);
    transition: $transition-duration, opacity 1s;

    // плавно убираю текст в бургер
    @for $i from 1 through $items {
        &:nth-child(#{$i}) {
            $delay: ($i - 1) * $transition-delay;
            transition-delay: $delay;
            &:before {
                transition-delay: $delay;
            }
        }
    }

    // Регулировка ширины первой линии
    &:nth-child(1) {
        letter-spacing: -8px;
    }

    // Регулировка ширины второй линии
    &:nth-child(2) {
        letter-spacing: -7px;
    }

    // Регулировка ширины линий начиная с четвертой
    &:nth-child(n + 4) {
        letter-spacing: -8px;
        margin-top: -7px;
        opacity: 0;
    }

    //Стилизация линий
    &:before {
        position: absolute;
        content: "";
        top: 50%;
        left: 0;
        width: 50%;
        height: 2px;
        background-color: #ffffff;
        transform: translateY(-50%) scaleY(5);
        transition: $transition-duration;
    }
}
